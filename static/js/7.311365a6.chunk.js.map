{"version":3,"sources":["pages/Counter/Counter.tsx","pages/Counter/CounterTip.tsx","pages/Counter/index.tsx","pages/Counter/Counter.module.css"],"names":["setup","ctx","ins","initState","_privCount","insState","state","add","setState","Counter","useC2Mod","COUNTER","moduleComputed","mr","settings","console","log","className","styles","row","onClick","button","aria-label","increment","value","doubleCount","decrementOne","textbox","toInc","onChange","e","Number","target","asyncButton","incrementAsync","normalButton","incrementBigValue","CounterTip","React","memo","useState","show","setShow","renderCount","bigValue","module","exports"],"mappings":"iLAMA,SAASA,EAAMC,GACb,IAAMC,EAAMD,EAAIE,UAAU,CACxBC,WAAY,IAEd,MAAO,CACLC,SAAUH,EAAII,MACdC,IAAK,kBAAML,EAAIM,SAAS,CAAEJ,WAAYF,EAAII,MAAMF,WAAa,MAI1D,SAASK,IACd,IAAMR,EAAMS,YAASC,IAAS,CAAEX,UAExBM,EAAwCL,EAAxCK,MAAOM,EAAiCX,EAAjCW,eAAgBC,EAAiBZ,EAAjBY,GAAIC,EAAab,EAAba,SAGnC,OAFAC,QAAQC,IAAIH,GAGV,6BACE,yBAAKI,UAAWC,IAAOC,KACrB,4BAAKL,EAAST,SAASD,YACvB,4BAAQgB,QAASN,EAASP,KAA1B,cAEF,yBAAKU,UAAWC,IAAOC,KACrB,4BACEF,UAAWC,IAAOG,OAClBC,aAAW,kBACXF,QAASP,EAAGU,WAHd,KAOA,0BAAMN,UAAWC,IAAOM,OAAQlB,EAAMkB,OACtC,0BAAMP,UAAWC,IAAOM,OAAxB,gBACgBZ,EAAea,aAE/B,4BACER,UAAWC,IAAOG,OAClBC,aAAW,kBACXF,QAASP,EAAGa,cAHd,MAQF,yBAAKT,UAAWC,IAAOC,KACrB,2BACEF,UAAWC,IAAOS,QAClBL,aAAW,uBACXE,MAAOlB,EAAMsB,MACbC,SAAU,SAACC,GAAD,OAAOjB,EAAGL,SAAS,CAAEoB,MAAOG,OAAOD,EAAEE,OAAOR,QAAU,OAElE,4BACEP,UAAWC,IAAOG,OAClBD,QAASP,EAAGU,WAFd,cAMA,4BACEN,UAAWC,IAAOe,YAClBb,QAASP,EAAGqB,gBAFd,aAMA,4BAAQjB,UAAWC,IAAOiB,aAAcf,QAASP,EAAGuB,mBAApD,mB,YC/DKC,EAAaC,IAAMC,MAAK,WACnC,IAAMtC,EAAMS,YAASC,KADoB,EAEjB2B,IAAME,UAAS,GAFE,mBAElCC,EAFkC,KAE5BC,EAF4B,KAIjCpC,EAAuCL,EAAvCK,MAAOM,EAAgCX,EAAhCW,eAAgB+B,EAAgB1C,EAAhB0C,YAG/B,OACE,6BACE,2CAAiBA,GAChBF,EACG,oCACA,wCAAcnC,EAAMkB,OACpB,2CAAiBlB,EAAMsC,UACvB,8CAAoBhC,EAAea,cAEnC,sEAEJ,4BAAQL,QAbO,kBAAMsB,GAASD,KAa9B,8BClBS,qBACb,OACE,6BACE,kBAAChC,EAAD,MACA,kBAAC4B,EAAD,S,oBCPNQ,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,mDAAmD,aAAe","file":"static/js/7.311365a6.chunk.js","sourcesContent":["import React from \"react\";\nimport { useC2Mod } from 'services/concent';\nimport { COUNTER } from \"configs/c2Mods\";\nimport { CtxM } from \"types/store\";\nimport styles from \"./Counter.module.css\";\n\nfunction setup(ctx: CtxM<{}, typeof COUNTER>) {\n  const ins = ctx.initState({\n    _privCount: 1,\n  });\n  return {\n    insState: ins.state,\n    add: () => ins.setState({ _privCount: ins.state._privCount + 1 }),\n  };\n}\n\nexport function Counter() {\n  const ctx = useC2Mod(COUNTER, { setup });\n  // module state, module computed, module reducer\n  const { state, moduleComputed, mr, settings } = ctx;\n  console.log(mr);\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <h3>{settings.insState._privCount}</h3>\n        <button onClick={settings.add}>add local</button>\n      </div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={mr.increment}\n        >\n          +\n        </button>\n        <span className={styles.value}>{state.value}</span>\n        <span className={styles.value}>\n          doubleCount: {moduleComputed.doubleCount}\n        </span>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={mr.decrementOne}\n        >\n          -\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={state.toInc}\n          onChange={(e) => mr.setState({ toInc: Number(e.target.value) || 0 })}\n        />\n        <button\n          className={styles.button}\n          onClick={mr.increment}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={mr.incrementAsync}\n        >\n          Add Async\n        </button>\n        <button className={styles.normalButton} onClick={mr.incrementBigValue}>\n          Add Big Value\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useC2Mod } from 'services/concent';\nimport { COUNTER } from 'configs/c2Mods';\n\nexport const CounterTip = React.memo(() => {\n  const ctx = useC2Mod(COUNTER);\n  const [show, setShow] = React.useState(true);\n  // module state, module computed\n  const { state, moduleComputed, renderCount } = ctx;\n  const toggleShow = () => setShow(!show);\n\n  return (\n    <div>\n      <h2>renderCount {renderCount}</h2>\n      {show\n        ? <>\n          <span> value:{state.value}</span>\n          <span> bigValue:{state.bigValue}</span>\n          <span> doubleCount:{moduleComputed.doubleCount}</span>\n        </>\n        : 'lost dep! module state change will not trigger CounterTip re-render'\n      }\n      <button onClick={toggleShow}>switch CounterTip view</button>\n    </div>\n  );\n});\n","import React from 'react';\nimport { Counter } from './Counter';\nimport { CounterTip } from './CounterTip';\n\nexport default () => {\n  return (\n    <div>\n      <Counter />\n      <CounterTip />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__9uVTt\",\"value\":\"Counter_value__17qx3\",\"button\":\"Counter_button__1k2QJ\",\"textbox\":\"Counter_textbox__-Kybg\",\"asyncButton\":\"Counter_asyncButton__yA4Tm Counter_button__1k2QJ\",\"normalButton\":\"Counter_normalButton__3xpjX Counter_button__1k2QJ\"};"],"sourceRoot":""}