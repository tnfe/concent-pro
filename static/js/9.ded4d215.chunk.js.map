{"version":3,"sources":["pages/Counter/Counter.module.css","pages/Counter/Counter.tsx","pages/Counter/CounterTip.tsx","pages/Counter/index.tsx"],"names":["module","exports","Counter","ctx","useC2Mod","COUNTER","state","moduleComputed","mr","console","log","className","styles","row","button","aria-label","onClick","increment","value","doubleCount","decrementOne","textbox","toInc","onChange","e","setState","Number","target","asyncButton","incrementAsync","normalButton","incrementBigValue","CounterTip","React","memo","useState","show","setShow","renderCount","bigValue"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,mDAAmD,aAAe,sD,+FCIzN,SAASC,IACd,IAAMC,EAAMC,YAASC,KAEbC,EAA8BH,EAA9BG,MAAOC,EAAuBJ,EAAvBI,eAAgBC,EAAOL,EAAPK,GAG/B,OAFAC,QAAQC,IAAIF,GAGV,6BACE,yBAAKG,UAAWC,IAAOC,KACrB,4BACEF,UAAWC,IAAOE,OAClBC,aAAW,kBACXC,QAASR,EAAGS,WAHd,KAOA,0BAAMN,UAAWC,IAAOM,OAAQZ,EAAMY,OACtC,0BAAMP,UAAWC,IAAOM,OAAxB,gBACgBX,EAAeY,aAE/B,4BACER,UAAWC,IAAOE,OAClBC,aAAW,kBACXC,QAASR,EAAGY,cAHd,MAQF,yBAAKT,UAAWC,IAAOC,KACrB,2BACEF,UAAWC,IAAOS,QAClBN,aAAW,uBACXG,MAAOZ,EAAMgB,MACbC,SAAU,SAACC,GAAD,OAAOhB,EAAGiB,SAAS,CAACH,MAAMI,OAAOF,EAAEG,OAAOT,QAAU,OAEhE,4BACEP,UAAWC,IAAOE,OAClBE,QAASR,EAAGS,WAFd,cAMA,4BACEN,UAAWC,IAAOgB,YAClBZ,QAASR,EAAGqB,gBAFd,aAMA,4BAAQlB,UAAWC,IAAOkB,aAAcd,QAASR,EAAGuB,mBAApD,mB,YChDKC,EAAaC,IAAMC,MAAK,WACnC,IAAM/B,EAAMC,YAASC,KADoB,EAEjB4B,IAAME,UAAS,GAFE,mBAElCC,EAFkC,KAE5BC,EAF4B,KAIjC/B,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,eAAgB+B,EAAgBnC,EAAhBmC,YAG/B,OACE,6BACE,2CAAiBA,GAChBF,EACG,oCACA,wCAAc9B,EAAMY,OACpB,2CAAiBZ,EAAMiC,UACvB,8CAAoBhC,EAAeY,cAEnC,sEAEJ,4BAAQH,QAbO,kBAAMqB,GAASD,KAa9B,8BClBS,qBACb,OACE,6BACE,kBAAClC,EAAD,MACA,kBAAC8B,EAAD","file":"static/js/9.ded4d215.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__9uVTt\",\"value\":\"Counter_value__17qx3\",\"button\":\"Counter_button__1k2QJ\",\"textbox\":\"Counter_textbox__-Kybg\",\"asyncButton\":\"Counter_asyncButton__yA4Tm Counter_button__1k2QJ\",\"normalButton\":\"Counter_normalButton__3xpjX Counter_button__1k2QJ\"};","import React from \"react\";\nimport { useC2Mod } from 'services/concent';\nimport { COUNTER } from \"configs/c2Mods\";\nimport styles from \"./Counter.module.css\";\n\nexport function Counter() {\n  const ctx = useC2Mod(COUNTER);\n  // module state, module computed, module reducer\n  const { state, moduleComputed, mr } = ctx;\n  console.log(mr);\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={mr.increment}\n        >\n          +\n        </button>\n        <span className={styles.value}>{state.value}</span>\n        <span className={styles.value}>\n          doubleCount: {moduleComputed.doubleCount}\n        </span>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={mr.decrementOne}\n        >\n          -\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={state.toInc}\n          onChange={(e) => mr.setState({toInc:Number(e.target.value) || 0})}\n        />\n        <button\n          className={styles.button}\n          onClick={mr.increment}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={mr.incrementAsync}\n        >\n          Add Async\n        </button>\n        <button className={styles.normalButton} onClick={mr.incrementBigValue}>\n          Add Big Value\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useC2Mod } from 'services/concent';\nimport { COUNTER } from 'configs/c2Mods';\n\nexport const CounterTip = React.memo(() => {\n  const ctx = useC2Mod(COUNTER);\n  const [show, setShow] = React.useState(true);\n  // module state, module computed\n  const { state, moduleComputed, renderCount } = ctx;\n  const toggleShow = () => setShow(!show);\n\n  return (\n    <div>\n      <h2>renderCount {renderCount}</h2>\n      {show\n        ? <>\n          <span> value:{state.value}</span>\n          <span> bigValue:{state.bigValue}</span>\n          <span> doubleCount:{moduleComputed.doubleCount}</span>\n        </>\n        : 'lost dep! module state change will not trigger CounterTip re-render'\n      }\n      <button onClick={toggleShow}>switch CounterTip view</button>\n    </div>\n  );\n});\n","import React from 'react';\nimport { Counter } from './Counter';\nimport { CounterTip } from './CounterTip';\n\nexport default () => {\n  return (\n    <div>\n      <Counter />\n      <CounterTip />\n    </div>\n  );\n};\n"],"sourceRoot":""}